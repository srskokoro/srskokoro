# Project-wide Gradle settings

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override* any settings
# specified in this file. For more details on how to configure your build
# environment visit, http://www.gradle.org/docs/8.5/userguide/build_environment.html

# See also, https://github.com/android/nowinandroid/blob/main/gradle.properties

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Ensure important default jvmargs aren't overwritten. See, https://github.com/gradle/gradle/issues/19750
org.gradle.jvmargs=-Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:+UseParallelGC -XX:MaxMetaspaceSize=2g
kotlin.daemon.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=2g

# When configured, Gradle will execute tasks belonging to different projects in
# parallel. See, https://docs.gradle.org/8.5/userguide/performance.html#parallel_execution
#
# NOTE: Unless KMP has its caches and internal tooling already set up, this
# should be disabled, since KMP seems incompatible to parallel task execution.
# The issue was observed while executing tasks set up by KMP that configure some
# kind of global state, such as those that run some external tooling like `node`
# or `yarn`, and they would trip each other, causing the build to fail.
#
# When disabling this, consider also disabling the configuration cache, since at
# the moment, Gradle won't disable parallel task execution unless the
# configuration cache is also disabled -- see, https://github.com/gradle/gradle/issues/23138
org.gradle.parallel=true

# Use the build cache.
org.gradle.caching=true

# Use gradle configuration cache to speed up the build.
# https://docs.gradle.org/8.5/userguide/configuration_cache.html
org.gradle.configuration-cache=true

# "Configuration on demand" is not encouraged by Gradle and can produce weird
# results. The "configuration cache" feature should be used instead. See also,
# https://github.com/jjohannes/gradle-project-setup-howto/issues/10#issuecomment-1354593179
org.gradle.configureondemand=false

## Kotlin

# Kotlin code style for this project: "official" or "obsolete"
kotlin.code.style=official

# https://kotlinlang.org/docs/multiplatform-share-on-platforms.html#connect-platform-specific-libraries
# - See also, https://youtrack.jetbrains.com/issue/KT-58712
# TODO Remove this as it seems unnecessary
!kotlin.mpp.enableCInteropCommonization=true

# https://kotlinlang.org/docs/whatsnew1920.html#set-up-the-target-hierarchy
!kotlin.mpp.applyDefaultHierarchyTemplate=false

# https://kotlinlang.org/docs/whatsnew18.html#kotlin-multiplatform-a-new-android-source-set-layout
kotlin.mpp.androidSourceSetLayoutVersion=2

# https://kotlinlang.org/docs/js-ir-compiler.html
kotlin.js.compiler=ir

# Enable incremental compilation for Kotlin/Native. Currently experimental.
# https://kotlinlang.org/docs/native-improving-compilation-time.html#gradle-configuration
# TODO Remove this once it's finally enabled by default
kotlin.incremental.native=true

# Hides warnings regarding Kotlin/Native targets that cannot be built by the
# current machine.
kotlin.native.ignoreDisabledTargets=true

# AtomicFU, IR transformation mode setup -- https://github.com/Kotlin/kotlinx-atomicfu/blob/version-0.20.2/README.md#atomicfu-compiler-plugin
kotlinx.atomicfu.enableJvmIrTransformation=true
kotlinx.atomicfu.enableJsIrTransformation=true

## Android

# Needed only to enable AndroidX for libraries that don't support it natively.
# https://d.android.com/r/tools/build-attribution/migrate-to-androidx
!android.enableJetifier=true

# AndroidX package structure to make it clearer which packages are bundled with
# the Android operating system, and which are packaged with your app's APK.
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Enables namespacing of each library's R class so that its R class includes
# only the resources declared in the library itself and none from the library's
# dependencies, thereby reducing the size of the R class for that library.
# Non-transitive R classes is recommended and is faster/smaller.
android.nonTransitiveRClass=true

# Disable build features that are enabled by default,
# https://developer.android.com/reference/tools/gradle-api/7.4/com/android/build/api/dsl/BuildFeatures
android.defaults.buildfeatures.buildconfig=false
android.defaults.buildfeatures.aidl=false
android.defaults.buildfeatures.renderscript=false
android.defaults.buildfeatures.resvalues=false
android.defaults.buildfeatures.shaders=false

# Make R fields non-final to improve build speeds. This property is `true` by
# default and is explicitly set here for the convenience of overriding the
# defaults -- see also, http://tools.android.com/tips/non-constant-fields
#
# NOTE: It may even be unnecessary for this property to be `true`, i.e., it may
# even be better for it to be `false` instead, due to the benefits of `final`
# fields, and also, since changes to constants no longer trigger a full
# recompilation in Gradle 8.0 -- see, https://gradle.org/whats-new/gradle-8/#changes-to-constants-no-longer-trigger-a-full-recompilation
android.nonFinalResIds=true

# Enable R8 full mode. This property is `true` by default and is explicitly set
# here for the convenience of overriding the defaults -- see also, https://r8.googlesource.com/r8/+/refs/heads/master/compatibility-faq.md#r8-full-mode
android.enableR8.fullMode=true

# The Android SDK Build Tools to use -- https://developer.android.com/tools/releases/build-tools
# - See also, https://developer.android.com/build/releases/gradle-plugin#compatibility
#
# TODO Move this eventually to our `dependencies` setup by allowing it to support custom properties.
conv.android.buildToolsVersion=34.0.0

conv.android.compileSdk=34
conv.android.targetSdk=34
conv.android.minSdk=21

## Build extras

# Setup for applying the "Foojay Toolchains" plugin. See,
# - https://docs.gradle.org/8.5/userguide/toolchains.html#sub:download_repositories
# - https://github.com/gradle/foojay-toolchains
build.foojay=0.7.0
build.foojay.convention=true

## App extras

kokoro.app.group=srskokoro

kokoro.app.title=SRS Kokoro App
kokoro.app.title.short=Kokoro

## Lib extras

kokoro.group=io.github.srskokoro

kokoro.internal.scoping.ns=kokoro.internal.scoping
kokoro.internal.scoping.artifact=kokoro-internal-scoping
kokoro.internal.scoping.compiler.artifact=kokoro-internal-scoping-compiler
kokoro.internal.scoping.plugin.artifact=kokoro-internal-scoping-plugin
